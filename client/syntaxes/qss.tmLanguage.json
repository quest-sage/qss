{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "QSS",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#literals"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#operators"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"comment": "Type declaration",
					"name": "storage.type.qss",
					"match": "\\b(struct|trait|impl)\\b"
				},
				{
					"comment": "Purity",
					"name": "storage.modifier.qss",
					"match": "\\b(pure|ui)\\b"
				},
				{
					"comment": "Trait implementation 'impl' keyword",
					"name": "storage.type.qss",
					"match": "\\bimpl\\b"
				},
				{
					"comment": "Trait implementation 'for' keyword",
					"name": "storage.type.qss",
					"match": "\\b(?<=impl\\s*[a-zA-Z0-9_:]*\\s*)(for)\\b"
				},
				{
					"comment": "Built-in type",
					"name": "entity.name.type.qss",
					"match": "\\b(Int|Bool|String|Text|Entity|Ratio|Col|Pos|Texture|Player|This|Func)\\b"
				},
				{
					"comment": "Keyword",
					"name": "keyword.other.qss",
					"match": "\\b(import|before|after|native|func|let|just|null)\\b"
				},
				{
					"comment": "Control flow",
					"name": "keyword.control.qss",
					"match": "\\b(return|if|else|for|in|while|new|break|continue)\\b"
				},
				{
					"comment": "Built-in variables",
					"name": "variable.language.qss",
					"match": "\\b(result|this)\\b"
				},
				{
					"comment": "Types",
					"name": "support.class.qss",
					"match": "\\b\\p{Lu}[\\p{L}\\p{N}_]*\\b"
				},
				{
					"comment": "Variables",
					"name": "variable.other.qss",
					"match": "\\b\\p{L}[\\p{L}\\p{N}_]*\\b"
				}
			]
		},
		"literals": {
			"patterns": [
				{
					"comment": "String literal",
					"name": "string.quoted.double.qss",
					"begin": "\"",
					"end": "[\\n\"]",
					"patterns": [
						{
							"name": "constant.character.escape.qss",
							"match": "\\\\."
						}
					]
				},
				{
					"comment": "Boolean constant",
					"name": "constant.language.boolean.qss",
					"match": "\\b(true|false)\\b"
				},
				{
					"comment": "Integer literal",
					"name": "constant.numeric.integer.decimal.qss",
					"match": "\\b[0-9]+\\b"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"comment": "Documentation comment",
					"name": "comment.block.documentation.qss",
					"begin": "\\*\\*",
					"end": "\\*\\*",
					"patterns": [
						{
							"comment": "Bold",
							"name": "markup.bold.qss",
							"begin": "__",
							"end": "__"
						},
						{
							"comment": "Italic",
							"name": "markup.italic.qss",
							"begin": "_",
							"end": "_"
						},
						{
							"comment": "QSS code block",
							"name": "markup.raw.fenced_code.qss",
							"begin": "```",
							"end": "```",
							"patterns": [
								{
									"include": "source.qss"
								}
							]
						},
						{
							"comment": "Inline code",
							"name": "markup.inline.raw.string.qss",
							"begin": "`",
							"end": "`",
							"patterns": [
								{
									"include": "#qss"
								}
							]
						}
					]
				},
				{
					"comment": "Line comment",
					"name": "comment.line.double-slash.qss",
					"begin": "//",
					"end": "\\n"
				},
				{
					"comment": "Block comment",
					"name": "comment.block.qss",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"comment": "Basic operators",
					"name": "keyword.operator.qss",
					"match": "([\\+\\-\\*\\/\\.,:;<>=&\\|\\?!{}\\(\\)])"
				}
			]
		}
	},
	"scopeName": "source.qss"
}